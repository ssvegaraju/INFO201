<<<<<<< HEAD
<<<<<<< HEAD
install.packages("dplyr")
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(manufacturers)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(manufacturers)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
?select
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
?unique
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(vehicles_in_1997)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(vehicles_in_1997)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(vehicles_in_1997)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(specific_vehicles)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(specific_vehicles)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
?orer
?order
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(vehicles)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-3/exercise.R', echo=TRUE)
View(best_Acura_nest)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-3/exercise.R', echo=TRUE)
View(best_Acura_pipe)
?read.csv
shiny::runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
?in
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
?guides
csa_data <- read.csv("csa-est2017-alldata.csv", stringsAsFactors = F)
setwd("~/COLLEGE SHIT/18SPRING/INFO 201/Final Project")
csa_data <- read.csv("csa-est2017-alldata.csv", stringsAsFactors = F)
View(csa_data)
shiny::runApp()
runApp()
?cor
View(csa_data)
runApp()
runApp()
runApp()
runApp()
View(csa_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
csa_data <- csa_data[2:10,]
View(csa_data)
View(csa_data)
both_states <- both_states[2:ncol(both_states),]
csa_data <- csa_data[,2:ncol(csa_data)]
View(csa_data)
runApp()
csa_data <- read.csv("csa-est2017-alldata.csv", stringsAsFactors = F)
View(csa_data)
state.abb
View(csa_data)
state.abb[state.abb != 'AK']
state.abb %>% filter(abb != "AK")
state.abb[state.abb != 'AK' & state.abb != "WY"]
=======
=======
sum_2010 = sum(DEATHS2010)
)
}
summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
}
aasdfasdf <- get_summarize_death_totals_two_states("OR")
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
}
aasdfasdf <- get_summarize_death_totals_two_states("OR")
View(aasdfasdf)
styler:::style_active_file()
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
second_choosen_state <- get_second_state(state_two)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- first_choosen_state %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <- first_choosen_state %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
}
get_summarize_death_totals_two_states("OR")
asfdasdf <- get_summarize_death_totals_two_states("OR")
asfdasdf <- get_summarize_death_totals_two_states("OR")
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- first_choosen_state %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <- first_choosen_state %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
}
asfdasdf <- get_summarize_death_totals_two_states("OR")
View(aasdfasdf)
# first state call
test <- get_first_state("OR")
# second state call
test_two <- get_second_state("WA")
second_choosen_state <- get_second_state(state_two)
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- first_choosen_state %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <- first_choosen_state %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
}
asfdasdf <- get_summarize_death_totals_two_states("OR")
View(aasdfasdf)
# first state call
test <- get_first_state("OR")
# second state call
test_two <- get_second_state("WA")
second_choosen_state <- get_second_state(state_two)
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- test %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
}
# sums of each year 2012
first_state_year2012_sum <- test %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- test %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- test %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <- test %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
}
asdfasd <- get_summarize_death_totals_two_states("OR")
View(asdfasd)
asdfasd <- get_summarize_death_totals_two_states("FL")
View(first_state_year2012_sum)
asdfasd <- get_summarize_death_totals_two_states("WA")
View(first_state_year2012_sum)
# first state call
test <- get_first_state("WA")
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- test %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- test %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <- test %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
}
asdfasd <- get_summarize_death_totals_two_states("WA")
View(asdfasd)
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- get_first_state(state_one) %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- get_first_state(state_one)  %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <- get_first_state(state_one) %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
}
asdfasd <- get_summarize_death_totals_two_states("WA")
View(asdfasd)
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- test %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- test %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <- test %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
}
asdfasd <- get_summarize_death_totals_two_states("WA")
View(asdfasd)
# sums of each year 2012
first_state_year2012_sum <-  first_choosen_state%>%
summarize(
sum_2012 = sum(DEATHS2012)
)
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- first_choosen_state %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <-  first_choosen_state%>%
summarize(
sum_2012 = sum(DEATHS2012)
)
}
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- first_choosen_state %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <-  first_choosen_state %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
first_state_year2013_sum <-  first_choosen_state %>%
summarize(
sum_2013 = sum(DEATHS2013)
)
first_state_year2014_sum <-  first_choosen_state %>%
summarize(
sum_2014 = sum(DEATHS2014)
)
first_state_year2015_sum <-  first_choosen_state %>%
summarize(
sum_2015 = sum(DEATHS2014)
)
first_state_year2016_sum <-  first_choosen_state %>%
summarize(
sum_2016 = sum(DEATHS2014)
)
first_state_year2017_sum <-  first_choosen_state %>%
summarize(
sum_2017 = sum(DEATHS2017)
)
}
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- first_choosen_state %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <-  first_choosen_state %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
first_state_year2013_sum <-  first_choosen_state %>%
summarize(
sum_2013 = sum(DEATHS2013)
)
first_state_year2014_sum <-  first_choosen_state %>%
summarize(
sum_2014 = sum(DEATHS2014)
)
first_state_year2015_sum <-  first_choosen_state %>%
summarize(
sum_2015 = sum(DEATHS2015)
)
first_state_year2016_sum <-  first_choosen_state %>%
summarize(
sum_2016 = sum(DEATHS2016)
)
first_state_year2017_sum <-  first_choosen_state %>%
summarize(
sum_2017 = sum(DEATHS2017)
)
first_state_summed_up <- data.frame(
name = state_one,
washington_year2010_sum,
washington_year2012_sum,
washington_year2013_sum,
washington_year2014_sum,
washington_year2015_sum,
washington_year2016_sum,
washington_year2017_sum
)
}
asdfasd <- get_summarize_death_totals_two_states("WA")
first_state_summed_up <- data.frame(
name = state_one,
first_state_year2010_sum,
first_state_year2011_sum,
first_state_year2012_sum,
first_state_year2013_sum,
first_state_year2014_sum,
first_state_year2015_sum,
first_state_year2016_sum,
first_state_year2017_sum
)
get_summarize_death_totals_two_states <- function(state_one) {
first_choosen_state <- get_first_state(state_one)
first_state_year2010_sum <- first_choosen_state %>%
summarize(
sum_2010 = sum(DEATHS2010)
)
first_state_year2011_sum <- first_choosen_state %>%
summarize(
sum_2011 = sum(DEATHS2011)
)
# sums of each year 2012
first_state_year2012_sum <-  first_choosen_state %>%
summarize(
sum_2012 = sum(DEATHS2012)
)
first_state_year2013_sum <-  first_choosen_state %>%
summarize(
sum_2013 = sum(DEATHS2013)
)
first_state_year2014_sum <-  first_choosen_state %>%
summarize(
sum_2014 = sum(DEATHS2014)
)
first_state_year2015_sum <-  first_choosen_state %>%
summarize(
sum_2015 = sum(DEATHS2015)
)
first_state_year2016_sum <-  first_choosen_state %>%
summarize(
sum_2016 = sum(DEATHS2016)
)
first_state_year2017_sum <-  first_choosen_state %>%
summarize(
sum_2017 = sum(DEATHS2017)
)
first_state_summed_up <- data.frame(
name = state_one,
first_state_year2010_sum,
first_state_year2011_sum,
first_state_year2012_sum,
first_state_year2013_sum,
first_state_year2014_sum,
first_state_year2015_sum,
first_state_year2016_sum,
first_state_year2017_sum
)
}
asdfasd <- get_summarize_death_totals_two_states("WA")
View(asdfasd)
florida <- get_summarize_death_totals_two_states("FL")
View(florida)
one_column <- both_states %>%
select(sum_2010)
first_row <- (both_states[1, ])
# get's two state's information
both_states_finally <- function() {
first_first <- get_summarize_death_totals_two_states()
second_second_ <- get_summarize_death_totals_two_states()
}
bbbbb <- both_states_finally("OR", "FL")
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second_ <- get_summarize_death_totals_two_states(get_second)
}
bbbbb <- both_states_finally("OR", "FL")
View(bbbbb)
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
}
bbbbb <- both_states_finally("OR", "FL")
View(bbbbb)
state_name <- both_states[,1]
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
state_name <- both_states[,1]
}
View(bbbbb)
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
state_name <- both_states[,1]
>>>>>>> roger_work
}
bbbbb <- both_states_finally("OR", "FL")
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
state_name <- both_states[, 1]
both_states <- both_states[, 2:ncol(both_states)]
}
bbbbb <- both_states_finally("OR", "FL")
View(bbbbb)
first_row <- both_states[1, ]
second_row <- both_states[2, ]
names(first_row, second_row) <- NULL
names(first_row) <- NULL
first_row <- both_states[1, ]
second_row <- both_states[2, ]
names(first_row) <- NULL
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
state_name <- both_states[, 1]
both_states <- both_states[, 2:ncol(both_states)]
first_row <- both_states[1, ]
second_row <- both_states[2, ]
names(first_row) <- NULL
}
names(first_row) <- NULL
names(second_row) <- NULL
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
state_name <- both_states[, 1]
both_states <- both_states[, 2:ncol(both_states)]
first_row <- both_states[1, ]
second_row <- both_states[2, ]
names(first_row) <- NULL
names(second_row) <- NULL
first_row <- unlist(first_row)
second_row <- unlist(second_row)
}
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
state_name <- both_states[, 1]
both_states <- both_states[, 2:ncol(both_states)]
first_row <- both_states[1, ]
second_row <- both_states[2, ]
names(first_row) <- NULL
names(second_row) <- NULL
first_row <- unlist(first_row)
second_row <- unlist(second_row)
years <- seq(2010, 2017)
}
bbbbb <- both_states_finally("OR", "FL")
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
state_name <- both_states[, 1]
both_states <- both_states[, 2:ncol(both_states)]
first_row <- both_states[1, ]
second_row <- both_states[2, ]
names(first_row) <- NULL
names(second_row) <- NULL
first_row <- unlist(first_row)
second_row <- unlist(second_row)
years <- seq(2010, 2017)
final_frame <- data.frame("first_state" = first_row, "second_state" = second_row, "years" = years)
}
bbbbb <- both_states_finally("OR", "FL")
View(bbbbb)
final_frame <- data.frame("first_state" = first_row, "second_state" = second_row, "years" = years)
# get's two state's information
both_states_finally <- function(get_first, get_second) {
first_first <- get_summarize_death_totals_two_states(get_first)
second_second <- get_summarize_death_totals_two_states(get_second)
both_states <- full_join(first_first, second_second)
state_name <- both_states[, 1]
both_states <- both_states[, 2:ncol(both_states)]
first_row <- both_states[1, ]
second_row <- both_states[2, ]
names(first_row) <- NULL
names(second_row) <- NULL
first_row <- unlist(first_row)
second_row <- unlist(second_row)
years <- seq(2010, 2017)
final_frame <- data.frame("first_state" = first_row, "second_state" = second_row, "years" = years)
}
ggplot(data =  bbbbb) +
geom_point(mapping = aes(x = years, y = first_state)) +
geom_point(mapping = aes(x = years, y = second_state))
ggplot(data =  bbbbb) +
geom_point(mapping = aes(x = years, y = first_state)) +
geom_point(mapping = aes(x = years, y = second_state))
runApp()
server <- function(input, output) {
frame_both_states <- reactive({
both_states_finally()
})
}
# shiny server
shinyServer(server)
runApp()
frame_both_states <- reactive({
both_states_finally(input$first_state, input$second_state)
})
server <- function(input, output) {
frame_both_states <- reactive({
both_states_finally(input$first_state, input$second_state)
})
}
<<<<<<< HEAD
print(country_change(Haiti))
# find the country, then it has to find the "change of the country
#################
#### PART 3 #####
#################
# Your script for Part 3 goes here (and delete this comment!)
life_expectancy <- read.csv("data/life_expectancy.csv", stringsAsFactors=FALSE)
life_expectancy <- read.csv("data/life_expectancy.csv", stringsAsFactors=FALSE)
# Retrieves life expectancy data from 1960
data_1960 <- life_expectancy[["le_1960"]]
# Retrieves life expectancy data from 2013
data_2013 <- life_expectancy[["le_2013"]]
# variable of the diffrence of 2013 and 1960 data
diffrence_of_years <- data_2013 - data_1960
# Creates new column called change with life
# subtraction life expectancy data
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
# variable that has the number of countries
# whose life expectancy has not improved by 5 years or
# worsened
num_small_gain <- life_expectancy[life_expectancy$change < 5, ]
print(num_small_gain)
# variable that has name of country with the largest
# gain of life expectancy
most_improved <- life_expectancy[110, 1]
print(most_improved)
# takes a country's name as an argument, and
# returns that country's change in life expectancy
# from 1960 to 2013
retrieve_change <- life_expectancy$change
#################
#### PART 1 #####
#################
teacher_assistant <- c(
"Michelle", "Patricia",
"Anukriti", "Andrew", "Bao", "Kishore"
)
math_grades <- c(50, 30, 70, 20, 90, 65)
spanish_grades <- c(30, 10, 99, 97, 81, 71)
tas <- data.frame(teacher_assistant, math_grades,
spanish_grades,
stringsAsFactors = FALSE
)
rows_data <- nrow(tas)
columns_data <- ncol(tas)
columns_names <- colnames(tas)
rows_columns <- paste(rows_data, columns_data)
new_sentence <- paste(columns_names, collapse = " , ")
paste("The TA data frame has", rows_data, "rows",
"and", columns_data, "columns:", new_sentence)
rownames(tas)
rownames(tas) <- teacher_assistant
print(teacher_assistant)
# created a vector that is a subtraction
diffrence_of_grade <- abs(math_grades - spanish_grades)
# Create a new columns with diffrence of grades
tas$grade_diff <- diffrence_of_grade
# Compares math grades and spanish grades
math_comparison <- math_grades > spanish_grades
tas$better_at_math <- math_comparison
num_better_at_math <- math_comparison[math_comparison == TRUE]
print(num_better_at_math)
write.csv(tas, file = "data/grade_data.csv")
#################
#### PART 2 #####
#################
life_expectancy <- read.csv("data/life_expectancy.csv", stringsAsFactors=FALSE)
# Retrieves life expectancy data from 1960
data_1960 <- life_expectancy[["le_1960"]]
# Retrieves life expectancy data from 2013
data_2013 <- life_expectancy[["le_2013"]]
# variable of the diffrence of 2013 and 1960 data
diffrence_of_years <- data_2013 - data_1960
# Creates new column called change with life
# subtraction life expectancy data
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
# variable that has the number of countries
# whose life expectancy has not improved by 5 years or
# worsened
num_small_gain <- life_expectancy[life_expectancy$change < 5, ]
print(num_small_gain)
# variable that has name of country with the largest
# gain of life expectancy
most_improved <- life_expectancy[110, 1]
print(most_improved)
# takes a country's name as an argument, and
# returns that country's change in life expectancy
# from 1960 to 2013
retrieve_change <- life_expectancy$change
# find the country, then it has to find the "change of the country
#################
#### PART 3 #####
#################
# Your script for Part 3 goes here (and delete this comment!)
source('~/Desktop/myowndata.R')
source('~/Desktop/myowndata.R', echo=TRUE)
source('~/Desktop/myowndata.R', echo=TRUE)
summarize_info <- summarise(people_information, mean = mean(weight))
summarize_info <- summarise(people_information, mean = mean(age))
summarize_info <- summarize(people_information, mean = mean(age))
summarize_info <- summarize(people_information, mean = mean(ages))
summarize_info <- summarize(people_information, mean = mean(ages))
summarize_info <- summarize(people_information, mean = mean(ages))
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
View(people_information)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
# why
summarize_info <- summarize(people_information, mean = mean(ages))
library("dplyr")
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
View(people_information)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
# why
summarize_info <- summarize(people_information, mean = mean(ages))
library("dplyr")
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
# why
summarize_info <- summarize(people_information, mean = mean(ages))
View(summarize_info)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
print(sorted_weight)
extra_names <- mutate(people_information, new_name = row.names(names))
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
print(sorted_weight)
summarize_info <- summarize(people_information, mean = mean(ages))
extra_names <- mutate(people_information, new_name = row.names(names))
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
print(sorted_weight)
summarize_info <- summarize(people_information, mean = mean(ages))
extra_names <- mutate(people_information, new_name = row.names(names))
library.install("httr")
install.packages("jsonlite")
library("jsonlite")
install.packages("httr")
setwd("~/Desktop/INFO201")
washington_data <- grepl(", WA", all_data$NAME)
>>>>>>> origin/roger_work
=======
# shiny server
shinyServer(server)
runApp()
runApp()
runApp()
runApp()
>>>>>>> roger_work
