<<<<<<< HEAD
install.packages("dplyr")
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(manufacturers)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(manufacturers)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
?select
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
?unique
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(vehicles_in_1997)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(vehicles_in_1997)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(vehicles_in_1997)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(specific_vehicles)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(specific_vehicles)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
?orer
?order
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-1/exercise.R', echo=TRUE)
View(vehicles)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-3/exercise.R', echo=TRUE)
View(best_Acura_nest)
source('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch10-dplyr/exercise-3/exercise.R', echo=TRUE)
View(best_Acura_pipe)
?read.csv
shiny::runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
?in
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
runApp('~/COLLEGE SHIT/18SPRING/INFO 201/exercises-ssvegaraju/ch16-shiny/exercise-4')
?guides
csa_data <- read.csv("csa-est2017-alldata.csv", stringsAsFactors = F)
setwd("~/COLLEGE SHIT/18SPRING/INFO 201/Final Project")
csa_data <- read.csv("csa-est2017-alldata.csv", stringsAsFactors = F)
View(csa_data)
shiny::runApp()
runApp()
?cor
View(csa_data)
runApp()
runApp()
runApp()
runApp()
View(csa_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
csa_data <- csa_data[2:10,]
View(csa_data)
View(csa_data)
both_states <- both_states[2:ncol(both_states),]
csa_data <- csa_data[,2:ncol(csa_data)]
View(csa_data)
runApp()
csa_data <- read.csv("csa-est2017-alldata.csv", stringsAsFactors = F)
View(csa_data)
state.abb
View(csa_data)
state.abb[state.abb != 'AK']
state.abb %>% filter(abb != "AK")
state.abb[state.abb != 'AK' & state.abb != "WY"]
=======
}
# Variable that calls, make_birthday_intro and prints
# the variable. Part 4.5
my_bday_intro <- make_birthday_intro(the_name, the_age, date)
print(my_bday_intro)
my_age <- 21
# Part 1.2
# Variable that stores my name
my_name <- "Roger"
# Takes my_name, my_age as arguments
# Creates an introduction message, and
# returns the introduction message. Part 1.3
make_introduction <- function(my_name, my_age) {
my_introduction <- paste(
"Hello, my name is",
my_name, "and I'm", my_age, "years old."
)
return(my_introduction)
}
# install.packages("stringr")
library("stringr")
#################
#### PART 1 #####
#################
# Part 1.1
# Variable that stores my age
my_age <- 21
# Part 1.2
# Variable that stores my name
my_name <- "Roger"
# Takes my_name, my_age as arguments
# Creates an introduction message, and
# returns the introduction message. Part 1.3
make_introduction <- function(my_name, my_age) {
my_introduction <- paste(
"Hello, my name is",
my_name, "and I'm", my_age, "years old."
)
return(my_introduction)
}
# Prints my_intro Part 1.4
my_intro <- make_introduction(my_name, my_age)
print(my_intro)
# Replaces first three words from my_intro
# with "Hey I'm", prints new intro which is casual intro
# Part 1.5
my_intro <- sub("Hello, my name is", "Hey I'm", my_intro)
casual_intro <- my_intro
print(casual_intro)
# Capitalizes first letter of each words
# in my_intro, prints results. Part 1.6
capital_intro <- str_to_title(my_intro)
print(capital_intro)
# Counts how many e's are in the my_intro
# variable, prints result. Part 1.7
intro_e_count <- str_count(my_intro, "e")
print(intro_e_count)
#################
#### PART 2 #####
#################
# A vector with books I like, and printed
# Part 2.1
books <- c(
"The giver", "Hunger Games",
"Harry potter", "Great expectations",
"Bud not Buddy", "Hucklberry Finn"
)
print(books)
# A variable with the top 3 books I like.
# Top three books are printed. Part 2.2
top_three_books <- c("The giver", "Hunger Games", "Harry Potter")
print(top_three_books)
# Adds "is a great read!" to each book. Part 2.3
book_reviews <- paste(books, "is a great read!")
print(book_reviews)
# Takes title_of_book, and index as arguments
# returns a filtered index element. Part 2.4
remove_book <- function(title_of_book, index) {
return(title_of_book[-index])
}
# Removes element four from books_without_four
# Part 2.5
books_without_four <- remove_book(books, 4)
print(books_without_four)
# Filters books with titles longer than 15
# characters Part 2.6
long_titles <- books[nchar(books) > 15]
print(long_titles)
#################
#### PART 3 #####
#################
# A variable of numbers that contains the numbers
# 1-201 Part 3.1
numbers <- 1:201
# Variable that contains squared numbers
# from vectors. Part 3.2
squared_numbers <- numbers * numbers
# Contains mean average value of
# squared_numbers. Part 3.3
squared_mean <- mean(squared_numbers)
print(squared_mean)
# Contains median value of
# squared_numbers vector. Part 3.4
squared_median <- median(squared_numbers)
print(squared_median)
# Contains numbers that are squares from
# numbers vector. Part 3.5
squares <- numbers[sqrt(numbers) == round(sqrt(numbers))]
print(squares)
#################
#### PART 4 #####
#################
# Represents first day of summer break. Part 4.1
summer_break <- as.Date("June-9-2018", "%b-%d-%Y")
# Represents current date. Part 4.2
today <- Sys.Date()
# Represents how many days from the current date
# until break. Part 4.3
days_to_break <- summer_break - Sys.Date()
print(days_to_break)
# Represents a birthday in 2018
date <- as.Date("Sep-13-2018", "%b-%d-%Y")
# Takes the_name, the_age, and date as arguments.
# returns a new intro by using make_introduction function
# and a new made intro, which is part_two_intro variable. Part 4.4
make_birthday_intro <- function(the_name, the_age, date) {
days_to_birthday <- date - Sys.Date()
new_age <- 22
make_intro_two <- paste(make_introduction(my_name, my_age))
part_two_intro <- paste("In", days_to_birthday, "days", "I'll be", new_age)
new_intro <- paste(make_intro_two, part_two_intro)
return(new_intro)
}
# Variable that calls, make_birthday_intro and prints
# the variable. Part 4.5
my_bday_intro <- make_birthday_intro(the_name, the_age, date)
print(my_bday_intro)
life_expectancy <- read.csv('data/life_expectancy.csv', stringsAsFactors=FALSE)
life_expectancy <- read.csv('data/life_expectancy.csv', stringsAsFactors=FALSE)
#################
#### PART 1 #####
#################
teacher_assistant <- c(
"Michelle", "Patricia",
"Anukriti", "Andrew", "Bao", "Kishore"
)
math_grades <- c(50, 30, 70, 20, 90, 65)
spanish_grades <- c(30, 10, 99, 97, 81, 71)
tas <- data.frame(teacher_assistant, math_grades,
spanish_grades,
stringsAsFactors = FALSE
)
rows_data <- nrow(tas)
columns_data <- ncol(tas)
columns_names <- colnames(tas)
rows_columns <- paste(rows_data, columns_data)
new_sentence <- paste(columns_names, collapse = " , ")
paste("The TA data frame has", rows_data, "rows",
"and", columns_data, "columns:", new_sentence)
rownames(tas)
rownames(tas) <- teacher_assistant
print(teacher_assistant)
# created a vector that is a subtraction
diffrence_of_grade <- abs(math_grades - spanish_grades)
# Create a new columns with diffrence of grades
tas$grade_diff <- diffrence_of_grade
# Compares math grades and spanish grades
math_comparison <- math_grades > spanish_grades
tas$better_at_math <- math_comparison
num_better_at_math <- math_comparison[math_comparison == TRUE]
print(num_better_at_math)
write.csv(tas, file = "data/grade_data.csv")
#################
#### PART 2 #####
#################
life_expectancy <- read.csv('data/life_expectancy.csv', stringsAsFactors=FALSE)
# Retrieves life expectancy data from 1960
data_1960 <- life_expectancy[["le_1960"]]
# Retrieves life expectancy data from 2013
data_2013 <- life_expectancy[["le_2013"]]
# variable of the diffrence of 2013 and 1960 data
diffrence_of_years <- data_2013 - data_1960
# Creates new column called change with life
# subtraction life expectancy data
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
# variable that has the number of countries
# whose life expectancy has not improved by 5 years or
# worsened
num_small_gain <- life_expectancy[life_expectancy$change < 5, ]
print(num_small_gain)
# variable that has name of country with the largest
# gain of life expectancy
most_improved <- life_expectancy[110, 1]
print(most_improved)
# takes a country's name as an argument, and
# returns that country's change in life expectancy
# from 1960 to 2013
filter_change <- life_expectancy[["change"]]
country_change <- function(country) {
retrun(filter_change)
}
print(country_change(Haiti))
# find the country, then it has to find the "change of the country
#################
#### PART 3 #####
#################
# Your script for Part 3 goes here (and delete this comment!)
filter_change <- life_expectancy[["change"]]
life_expectancy <- read.csv('data/life_expectancy.csv', stringsAsFactors=FALS
filter_change <- life_expectancy[["change"]]
life_expectancy[["change"]]
life_expectancy[life_expectancy["change"]]
life_expectancy[["change"]]
life_expectancy [["change"]]
life_expectancy[["change"]]
life_expectancy[["change"]]
country_change <- function(country) {
}
life_expectancy[["change"]]
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
life_expectancy <- read.csv('data/life_expectancy.csv', stringsAsFactors=FALSE)
# Retrieves life expectancy data from 1960
data_1960 <- life_expectancy[["le_1960"]]
# Retrieves life expectancy data from 2013
data_2013 <- life_expectancy[["le_2013"]]
# variable of the diffrence of 2013 and 1960 data
diffrence_of_years <- data_2013 - data_1960
# Creates new column called change with life
# subtraction life expectancy data
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
# variable that has the number of countries
# whose life expectancy has not improved by 5 years or
# worsened
num_small_gain <- life_expectancy[life_expectancy$change < 5, ]
print(num_small_gain)
# variable that has name of country with the largest
# gain of life expectancy
most_improved <- life_expectancy[110, 1]
print(most_improved)
# takes a country's name as an argument, and
# returns that country's change in life expectancy
# from 1960 to 2013
life_expectancy[["change"]]
country_change <- function(country) {
}
retrieve_change <- life_expectancy$change
life_expectancy <- read.csv('data/life_expectancy.csv', stringsAsFactors=FALSE)
# Retrieves life expectancy data from 1960
data_1960 <- life_expectancy[["le_1960"]]
# Retrieves life expectancy data from 2013
data_2013 <- life_expectancy[["le_2013"]]
# variable of the diffrence of 2013 and 1960 data
diffrence_of_years <- data_2013 - data_1960
# Creates new column called change with life
# subtraction life expectancy data
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
# variable that has the number of countries
# whose life expectancy has not improved by 5 years or
# worsened
num_small_gain <- life_expectancy[life_expectancy$change < 5, ]
print(num_small_gain)
# variable that has name of country with the largest
# gain of life expectancy
most_improved <- life_expectancy[110, 1]
print(most_improved)
# takes a country's name as an argument, and
# returns that country's change in life expectancy
# from 1960 to 2013
retrieve_change <- life_expectancy$change
#################
#### PART 1 #####
#################
teacher_assistant <- c(
"Michelle", "Patricia",
"Anukriti", "Andrew", "Bao", "Kishore"
)
math_grades <- c(50, 30, 70, 20, 90, 65)
spanish_grades <- c(30, 10, 99, 97, 81, 71)
tas <- data.frame(teacher_assistant, math_grades,
spanish_grades,
stringsAsFactors = FALSE
)
rows_data <- nrow(tas)
columns_data <- ncol(tas)
columns_names <- colnames(tas)
rows_columns <- paste(rows_data, columns_data)
new_sentence <- paste(columns_names, collapse = " , ")
paste("The TA data frame has", rows_data, "rows",
"and", columns_data, "columns:", new_sentence)
rownames(tas)
rownames(tas) <- teacher_assistant
print(teacher_assistant)
# created a vector that is a subtraction
diffrence_of_grade <- abs(math_grades - spanish_grades)
# Create a new columns with diffrence of grades
tas$grade_diff <- diffrence_of_grade
# Compares math grades and spanish grades
math_comparison <- math_grades > spanish_grades
tas$better_at_math <- math_comparison
num_better_at_math <- math_comparison[math_comparison == TRUE]
print(num_better_at_math)
write.csv(tas, file = "data/grade_data.csv")
#################
#### PART 2 #####
#################
life_expectancy <- read.csv('data/life_expectancy.csv', stringsAsFactors=FALSE)
# Retrieves life expectancy data from 1960
data_1960 <- life_expectancy[["le_1960"]]
# Retrieves life expectancy data from 2013
data_2013 <- life_expectancy[["le_2013"]]
# variable of the diffrence of 2013 and 1960 data
diffrence_of_years <- data_2013 - data_1960
# Creates new column called change with life
# subtraction life expectancy data
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
# variable that has the number of countries
# whose life expectancy has not improved by 5 years or
# worsened
num_small_gain <- life_expectancy[life_expectancy$change < 5, ]
print(num_small_gain)
# variable that has name of country with the largest
# gain of life expectancy
most_improved <- life_expectancy[110, 1]
print(most_improved)
# takes a country's name as an argument, and
# returns that country's change in life expectancy
# from 1960 to 2013
retrieve_change <- life_expectancy$change
country_change <- function(country) {
}
print(country_change(Haiti))
# find the country, then it has to find the "change of the country
#################
#### PART 3 #####
#################
# Your script for Part 3 goes here (and delete this comment!)
life_expectancy <- read.csv("data/life_expectancy.csv", stringsAsFactors=FALSE)
life_expectancy <- read.csv("data/life_expectancy.csv", stringsAsFactors=FALSE)
# Retrieves life expectancy data from 1960
data_1960 <- life_expectancy[["le_1960"]]
# Retrieves life expectancy data from 2013
data_2013 <- life_expectancy[["le_2013"]]
# variable of the diffrence of 2013 and 1960 data
diffrence_of_years <- data_2013 - data_1960
# Creates new column called change with life
# subtraction life expectancy data
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
# variable that has the number of countries
# whose life expectancy has not improved by 5 years or
# worsened
num_small_gain <- life_expectancy[life_expectancy$change < 5, ]
print(num_small_gain)
# variable that has name of country with the largest
# gain of life expectancy
most_improved <- life_expectancy[110, 1]
print(most_improved)
# takes a country's name as an argument, and
# returns that country's change in life expectancy
# from 1960 to 2013
retrieve_change <- life_expectancy$change
#################
#### PART 1 #####
#################
teacher_assistant <- c(
"Michelle", "Patricia",
"Anukriti", "Andrew", "Bao", "Kishore"
)
math_grades <- c(50, 30, 70, 20, 90, 65)
spanish_grades <- c(30, 10, 99, 97, 81, 71)
tas <- data.frame(teacher_assistant, math_grades,
spanish_grades,
stringsAsFactors = FALSE
)
rows_data <- nrow(tas)
columns_data <- ncol(tas)
columns_names <- colnames(tas)
rows_columns <- paste(rows_data, columns_data)
new_sentence <- paste(columns_names, collapse = " , ")
paste("The TA data frame has", rows_data, "rows",
"and", columns_data, "columns:", new_sentence)
rownames(tas)
rownames(tas) <- teacher_assistant
print(teacher_assistant)
# created a vector that is a subtraction
diffrence_of_grade <- abs(math_grades - spanish_grades)
# Create a new columns with diffrence of grades
tas$grade_diff <- diffrence_of_grade
# Compares math grades and spanish grades
math_comparison <- math_grades > spanish_grades
tas$better_at_math <- math_comparison
num_better_at_math <- math_comparison[math_comparison == TRUE]
print(num_better_at_math)
write.csv(tas, file = "data/grade_data.csv")
#################
#### PART 2 #####
#################
life_expectancy <- read.csv("data/life_expectancy.csv", stringsAsFactors=FALSE)
# Retrieves life expectancy data from 1960
data_1960 <- life_expectancy[["le_1960"]]
# Retrieves life expectancy data from 2013
data_2013 <- life_expectancy[["le_2013"]]
# variable of the diffrence of 2013 and 1960 data
diffrence_of_years <- data_2013 - data_1960
# Creates new column called change with life
# subtraction life expectancy data
life_expectancy$change <- diffrence_of_years
print(diffrence_of_years)
# variable that has the number of countries
# whose life expectancy has not improved by 5 years or
# worsened
num_small_gain <- life_expectancy[life_expectancy$change < 5, ]
print(num_small_gain)
# variable that has name of country with the largest
# gain of life expectancy
most_improved <- life_expectancy[110, 1]
print(most_improved)
# takes a country's name as an argument, and
# returns that country's change in life expectancy
# from 1960 to 2013
retrieve_change <- life_expectancy$change
# find the country, then it has to find the "change of the country
#################
#### PART 3 #####
#################
# Your script for Part 3 goes here (and delete this comment!)
source('~/Desktop/myowndata.R')
source('~/Desktop/myowndata.R', echo=TRUE)
source('~/Desktop/myowndata.R', echo=TRUE)
summarize_info <- summarise(people_information, mean = mean(weight))
summarize_info <- summarise(people_information, mean = mean(age))
summarize_info <- summarize(people_information, mean = mean(age))
summarize_info <- summarize(people_information, mean = mean(ages))
summarize_info <- summarize(people_information, mean = mean(ages))
summarize_info <- summarize(people_information, mean = mean(ages))
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
View(people_information)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
# why
summarize_info <- summarize(people_information, mean = mean(ages))
library("dplyr")
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
View(people_information)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
# why
summarize_info <- summarize(people_information, mean = mean(ages))
library("dplyr")
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
# why
summarize_info <- summarize(people_information, mean = mean(ages))
View(summarize_info)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
print(sorted_weight)
extra_names <- mutate(people_information, new_name = row.names(names))
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
print(sorted_weight)
summarize_info <- summarize(people_information, mean = mean(ages))
extra_names <- mutate(people_information, new_name = row.names(names))
names <- c("John", "Ron", "Billy", "Jane", "Hayde","Carol")
ages <- c(13, 14, 16, 11, 18, 21)
weight <- c(113, 555, 89, 44, 64 , 44)
people_information <- data.frame(names, ages, weight, stringsAsFactors = FALSE)
select(people_information, names, weight)
# Extract any weight bigger than 50
most_weight <- filter(people_information, weight > 50)
# Why is it not putting it order?
sorted_weight <- arrange(people_information, weight)
print(sorted_weight)
summarize_info <- summarize(people_information, mean = mean(ages))
extra_names <- mutate(people_information, new_name = row.names(names))
library.install("httr")
install.packages("jsonlite")
library("jsonlite")
install.packages("httr")
setwd("~/Desktop/INFO201")
washington_data <- grepl(", WA", all_data$NAME)
>>>>>>> origin/roger_work
